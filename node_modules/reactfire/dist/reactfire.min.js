/*!
 * ReactFire is an open-source JavaScript library that allows you to add a
 * realtime data source to your React apps by providing and easy way to let
 * Firebase populate the state of React components.
 *
 * ReactFire 0.4.0
 * https://github.com/firebase/reactfire/
 * License: MIT
 */
(function(n,t){"use strict";typeof define=="function"&&define.amd?define([],function(){return n.ReactFireMixin=t()}):typeof exports=="object"?module.exports=t():n.ReactFireMixin=t()})(this,function(){"use strict";return{componentWillMount:function(){this.firebaseRefs={};this.firebaseListeners={}},componentWillUnmount:function(){for(var n in this.firebaseRefs)this.firebaseRefs.hasOwnProperty(n)&&this.unbind(n)},bindAsArray:function(n,t,i){this._bind(n,t,i,!0)},bindAsObject:function(n,t,i){this._bind(n,t,i,!1)},_bind:function(n,t,i,r){var u,f,e;if(this._validateBindVar(t),Object.prototype.toString.call(n)!=="[object Object]"?(u="firebaseRef must be an instance of Firebase",f="INVALID_FIREBASE_REF"):typeof r!="boolean"&&(u="bindAsArray must be a boolean. Got: "+r,f="INVALID_BIND_AS_ARRAY"),typeof u!="undefined"){e=new Error("ReactFire: "+u);e.code=f;throw e;}this.firebaseRefs[t]=n.ref();this.firebaseListeners[t]=n.on("value",function(n){var i={};i[t]=r?this._toArray(n.val()):n.val();this.setState(i)}.bind(this),i)},unbind:function(n){if(this._validateBindVar(n),typeof this.firebaseRefs[n]=="undefined"){var t=new Error('ReactFire: unexpected value for bindVar. "'+n+'" was either never bound or has already been unbound');t.code="UNBOUND_BIND_VARIABLE";throw t;}this.firebaseRefs[n].off("value",this.firebaseListeners[n]);delete this.firebaseRefs[n];delete this.firebaseListeners[n]},_validateBindVar:function(n){var t,i;if(typeof n!="string"?t="bindVar must be a string. Got: "+n:n.length===0?t='bindVar must be a non-empty string. Got: ""':n.length>768?t="bindVar is too long to be stored in Firebase. Got: "+n:/[\[\].#$\/\u0000-\u001F\u007F]/.test(n)&&(t="bindVar cannot contain any of the following characters: . # $ ] [ /. Got: "+n),typeof t!="undefined"){i=new Error("ReactFire: "+t);i.code="INVALID_BIND_VARIABLE";throw i;}},_isArray:function(n){return Object.prototype.toString.call(n)==="[object Array]"},_toArray:function(n){var i=[],t;if(n)if(this._isArray(n))i=n;else if(typeof n=="object")for(t in n)n.hasOwnProperty(t)&&i.push({key:t,props:n[t]});return i}}});
//# sourceMappingURL=reactfire.min.js.map
